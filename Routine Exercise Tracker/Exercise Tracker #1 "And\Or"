/** Moving on to more complex queries, this time we are tasked with creating an exercise log with the listed values down below. This task is to help us figure out 
how we could filter out information using the AND/OR operators, as well as now using the TYPE operator for our string value label. **/

CREATE TABLE exercise_logs
    (id INTEGER PRIMARY KEY AUTOINCREMENT,
    type TEXT,
    minutes INTEGER, 
    calories INTEGER,
    heart_rate INTEGER);


INSERT INTO exercise_logs(type, minutes, calories, heart_rate) VALUES ("biking", 30, 100, 110);
INSERT INTO exercise_logs(type, minutes, calories, heart_rate) VALUES ("biking", 10, 30, 105);
INSERT INTO exercise_logs(type, minutes, calories, heart_rate) VALUES ("dancing", 15, 200, 120);

-- The 'type' operator is now replacing what we would put in our grocery list file as "name," the TYPE value makes whatever we put in a string value, meaning that would 
label things like biking or dancing as string values.


SELECT * FROM exercise_logs WHERE calories > 50 ORDER BY calories;

--The above select query would be what we usually would use as our query, in this exercise we want to find out which activities I've done that have burned more than 50 
calories, but also taken less than 30 minutes. To find this the `AND` operator combines those multiple conditions, whereas the `OR` operator returns rows that meet any
of the same conditions. 

/* AND */
SELECT * FROM exercise_logs WHERE calories > 50 AND minutes < 30;

/* OR */
SELECT * FROM exercise_logs WHERE calories > 50 OR heart_rate > 100;

